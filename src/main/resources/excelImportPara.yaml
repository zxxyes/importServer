#项目种类：excel导入类型属性配置。支持多个文件存放,以便于维护管理
#excel列项属性定义:
#fieldname:?
#fieldtype:?int,string等
#dict:内容,内容
#dataverifyrules:ok为按照fieldtype校验,也可以用计算表达式:字段名>字段名等
#dataverifyfun:数据校验函数名
#errnotes:字段名(显示字段对应行的值)

#excel导入类型字典
assetsListImportType: 
    commonImport: 一般租赁物清单
    planImport: 飞机租赁物清单
    carImport: 车辆租赁物清单
    shipImport: 船舶租赁物清单

assetsType: 
    #业务类型businessType:租赁物excel导入类型
    generalAssets: 金属加工设备
    #业务类型businessType:应收账款excel导入类型
    planeAssets: 直升机
    #根据项目需要自己加业务类型businessType
    carAssets: 货船

assetsTypeRelImportType: 
    #业务类型businessType:租赁物excel导入类型
    generalAssets: [commonImport,planImport]
    #业务类型businessType:应收账款excel导入类型
    planeAssets: [planImport]
    #根据项目需要自己加业务类型businessType
    carAssets: [carAssets,shipImport]

#项目种类：所属的excel导入类型
projectType: 
    #业务类型businessType:租赁物excel导入类型
    directFinancialLeasing: [generalAssets]
    #业务类型businessType:应收账款excel导入类型
    leaseback: [generalAssets,planeAssets]
    #根据项目需要自己加业务类型businessType

#excel导入类型属性
commonImport: 
    #表头所在行号
    headerline: !!int 
     1
    #基本信息数据库表配置
    basicTable: 
    #明细数据库表配置
    detailTable: 
        - 
         tableName: kzassetsinfor
         columns: [XH,ASSETSNAME,HAVEINVOICE,INVOICECODE,UNITPRICE,RECORDELIVERDATE]
         PK: 
           - ID: 
               filedtype: 
                       basetype: String
                       length: 50
               creator: 
                      class: com.cvicse.util.AssetsKey
                      method: keyGenerator

    #执行个性化处理组件，没有应不配置
    comfun: []

    #excel列项配置:配置有效的列。
    #dataverifyrules: ok为按照fieldtype校验,也可以用计算表达式:字段名>字段名等。
    #dataverifyfun: 数据个性校验函数名
    #dict: 字段参数字典
    excelcolumns:  
        0: 
            fieldname: XH
            fieldtype: 
                    basetype: int
                    scope:  10
            dict: 
            dataverifyrules: ok
            dataverifyfun: 
            errnotes: $ROWNUM行 $FIELDNAME错误;
        1: 
            fieldname: ASSETSNAME
            fieldtype: 
                     basetype: String
                     scope:  100
            dict: 
            dataverifyrules: ok
            dataverifyfun: 
            errnotes: $ROWNUM $FIELDNAME 错误;
        2: 
            fieldname: HAVEINVOICE
            fieldtype: 
                     basetype: string
                     scope:  100
            dict: 
                 无: 0
                 有: 1
            dataverifyrules: ok
            dataverifyfun: 
            errnotes: $ROWNUM $FIELDNAME 错误
        3: 
            fieldname: INVOICECODE
            fieldtype: 
                     basetype: string
                     scope: 100
            dict: 
            dataverifyrules: ok
            dataverifyfun: 
            errnotes: $ROWNUM $FIELDNAME 错误;
        6: 
            fieldname: UNITPRICE
            fieldtype: 
                     basetype: double
                     scope: 16,2
            dict: 
            dataverifyrules: ok
            dataverifyfun: 
            errnotes: $ROWNUM $FIELDNAME 错误;
        11: 
            fieldname: RECORDELIVERDATE
            fieldtype: 
                      basetype: date
                      scope: 
            dict: 
            dataverifyrules: ok
            dataverifyfun: 
            errnotes: $ROWNUM $FIELDNAME 错误;

#END
